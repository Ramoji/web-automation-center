<!DOCTYPE html>
<html>
<head>
  <script src="http://code.jquery.com/jquery-latest.min.js"></script>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css">
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-theme.min.css">
	<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
</head>
<body>
	<div class="panel panel-info">
	  <div class="panel-heading">Status</div>
	  <div class="panel-body">
	    <div id="status">
	      <div class="progress progress-striped active" id="progressouter">
	        <div class="progress-bar"  role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%" id="progress">
	          <span class="sr-only">0% Complete</span>
	        </div>
	      </div>
	    </div>
	  </div>
	</div>

	<script type="text/javascript">
		var part;
		var five_megabytes;
		var headers_parts;
		var data;
		var xml;
		var xml_parts;
		var started_tasks;
		var running_tasks;
		var finished_tasks;
		var percent_done;
		var start_time;

		function complete_multipart_upload() {
			xml = "<CompleteMultipartUpload>";
			for (var i = 1; i <= <%= @num_parts.to_s %>; i++) {
				xml += xml_parts[i];
			}
			xml += "</CompleteMultipartUpload>";
			$.ajax({
			    url: '/<%= @filename %>?uploadId=<%= @upload_id %>',
			    data: xml,
			    cache: false,
			    contentType: "text/xml",
			    processData: false,
			    type: 'POST',
			    beforeSend: function (request)
		      {
		      	<% @complete_multipart_upload_headers.each do |key, value| %>
							request.setRequestHeader("<%= key %>", "<%= value %>");
		      	<% end %>
		      },
			    success: function(data, textStatus, request){
			      $("#progressouter").removeClass("active");
			      current_time = new Date();
			      duration = Math.round((current_time - start_time) / 1000);
			      throughput = ((<%= @file_size.to_s %> / (1024 * 1024)) / duration).toFixed(1);
			      $("#progress").html("Completed in " + duration + " s with an average throughput of " + throughput + " MB/s");
			    }
			  });
		}

		function send_part(actual_part) {
			if(started_tasks < <%= @num_parts.to_s %>){
				started_tasks++;
				running_tasks++;
				chunk_start = (actual_part - 1) * five_megabytes
				chunk_end = actual_part * five_megabytes
				if(chunk_end > (data.length - 1)) {
					chunk_end = data.length;
				}
				chunk = data.slice(chunk_start, chunk_end);
				$.ajax({
			    url: '/<%= @filename %>?partNumber=' + actual_part +  '&uploadId=<%= @upload_id %>',
			    data: chunk,
			    cache: false,
			    //contentType: "binary",
			    processData: false,
			    type: 'PUT',
			    beforeSend: function (request)
		      {
		      	for (var key in headers_parts[actual_part]) {
							request.setRequestHeader(key, headers_parts[actual_part][key]);
		      	}
		      },
		      /*
		      complete: function(data, textStatus){
		      	window.alert(data.status);
		      },
		      */
			    success: function(data, textStatus, request){
			    	running_tasks--;
			    	finished_tasks++;
			    	percent_done = Math.round(finished_tasks * 100 / <%= @num_parts.to_s %>);
						$("#progress").css('width',percent_done + '%');
					  $("#progress").html(percent_done + '%');
			    	etag = request.getResponseHeader("Etag");
		    		etag = etag.substring(1, etag.length - 1);
		    		xml_part = "<Part><PartNumber>";
		    		xml_part += actual_part;
		    		xml_part += "</PartNumber><ETag>";
		    		xml_part += etag;
						xml_part += "</ETag></Part>";
						xml_parts[actual_part] = xml_part;
			    	if((started_tasks == <%= @num_parts.to_s %>)&&(running_tasks == 0)) {
			    		complete_multipart_upload();
			    	}
			    	else {
							send_part(++part);
			    	}
			    }
			  });
		 	}
		}

		function receiveMessage(e){
			window.removeEventListener("message", receiveMessage, false);
			part = 0;
			five_megabytes = 5 * 1024 * 1024;
			headers_parts = {};
			xml_parts = {};
			started_tasks = 0;
			running_tasks = 0;
			finished_tasks = 0;
			data = e.data;
			percent_done = 0;
			start_time = new Date();
			<% (1..@num_parts).to_a.each do |part| %>
				headers_parts[<%= part.to_s %>] = new Object();
				<% @headers[part].each do |key, value| %>
					headers_parts["<%= part.to_s %>"]["<%= key %>"] = "<%= value %>";
				<% end %>
			<% end %>
			<% (1..@num_threads).to_a.each do |thread| %>
				<% if thread <= @num_parts %>
				  if(started_tasks < <%= @num_parts.to_s %>) {
				  	part++;
						send_part(part);
					}
				<% end %>
			<% end %>
		}

		window.addEventListener("message", receiveMessage, false);
	</script>
</body>
</html>